import plotly
import plotly.graph_objects as go
%matplotlib inline
from matplotlib import pyplot as plt
import pandas as pd
import urllib.request
import sys
from datetime import date, datetime
import requests
from bs4 import BeautifulSoup
import sigmet
import os

limiar=input('Digite o valor mínimo de precipitação (mm): ')

excel_file = 'Estações_2019.xlsx'
df = pd.read_excel(excel_file)

fig = go.Figure()
fig.add_trace(go.Scatter( x=df['Data'], y=df['PRECIPITAÇÃO TOTAL (RIO GRANDE)'], name='Rio Grande'))
fig.add_trace(go.Scatter( x=df['Data'], y=df['PRECIPITAÇÃO TOTAL (MOSTARDAS)'], name='Mostardas'))
fig.add_trace(go.Scatter( x=df['Data'], y=df['PRECIPITAÇÃO TOTAL (CANGUÇU)'], name='Canguçu'))

fig.update_layout(title='Precipitação Horária - 2019', xaxis_title='Tempo (horas UTC)', yaxis_title='Precipitação (mm)')

fig.show()

plotly.offline.plot(fig, filename="Chuva_2019.html")

caguçu=df['PRECIPITAÇÃO TOTAL (CANGUÇU)']
mostardas=df['PRECIPITAÇÃO TOTAL (MOSTARDAS)']
rio_grande=df['PRECIPITAÇÃO TOTAL (RIO GRANDE)']
hora=df['Hora UTC']
d=df['Data'].dt.date
ano=df['Data'].dt.year
mes=df['Data'].dt.month
dia=df['Data'].dt.day
n=1
ndias=0
dias_satelite=[None]
dias_radar=[None]


for i in range(len(d)):
    if caguçu[i]>=int(limiar) or mostardas[i]>=int(limiar) or rio_grande[i]>=int(limiar):
        
#Transformar o formato de número para o de dois dígitos

        if hora[i]<10:
            hora0=str(0)+str(hora[i])
        else:
            hora0=str(hora[i])
        if mes[i]<10:
            mes2d=str(0)+str(mes[i])
        else:
            mes2d=str(mes[i])
        if dia[i]<10:
            dia2d=str(0)+str(dia[i])
        else:
            dia2d=str(dia[i])

        if caguçu[i]>=int(limiar):
            chuva=str(caguçu[i])
            estação='Canguçu'
        elif mostardas[i]>=int(limiar):
            chuva=str(mostardas[i])
            estação='Mostardas'
        elif rio_grande[i]>=int(limiar):
            chuva=str(rio_grande[i])
            estação='Rio Grande'

        dataFormatada = str(d[i].strftime('%Y%m%d'))
        ano4d=str(ano[i])
        ano2d=ano[i]-2000
        chuva_arredondado=int(round(float(chuva),0))
        chuva_arredondado=str(chuva_arredondado)

#Download das imagens do cptec

        if dias_satelite[ndias]!=dataFormatada:
            try:
                if int(mes2d)>=2:
                    urllib.request.urlretrieve("http://satelite.cptec.inpe.br/repositoriogoes/goes16/goes16_web/ams_ret_ch13_baixa/%s/%s/S11635388_%s1200.jpg" %(ano4d,mes2d,dataFormatada), "%s_12Z - %s_%smm.jpg" %(dataFormatada,estação,chuva_arredondado))
                    urllib.request.urlretrieve("http://img0.cptec.inpe.br/~rgptimg/Produtos-Pagina/Carta-Sinotica/Analise/Superficie/superficie_%s12.gif" %(dataFormatada), "%s_12Z - %s_%smm.gif" %(dataFormatada,estação,chuva_arredondado))
                    print("Imagens de satélite e cptec salvas do dia %s 12Z (%s m/s) - %s" %(dataFormatada,chuva,estação))
                    dias_satelite.append(dataFormatada)
                    ndias=ndias+1
                    pass
            except:
                erro = sys.exc_info()
                print("Ocorreu um erro em %s_%sZ (%s):"  %(dataFormatada,hora0,estação), erro)

#--------------------------------

#Download das imagens de satétite

        url='http://200.17.160.116:18000/dados/iris_data/product_raw/%s/%s/%s/' %(ano4d,mes2d,dia2d)

        links=[]
        
        try:
            urllib.request.urlretrieve('http://200.17.160.116:18000/dados/iris_data/product_raw/%s/%s/%s/' %(ano4d,mes2d,dia2d))
        except:
            print('Não foram encontradas imagens de radar para o dia %s/%s/%s (%s mm)' %(dia2d,mes2d,ano2d,chuva))
        
        website=requests.get(url)
        website_text=website.text
        soup = BeautifulSoup(website_text)

        for link in soup.find_all('a'):
            links.append(link.get('href'))

        for j in links:
            if j[3:9] == '%s%s%s' %(ano2d,mes2d,dia2d) and j[3:9] != dias_radar[n-1]:                    
                web=url+j                    
                urllib.request.urlretrieve(web,j)
                file_stats = os.path.getsize("C:/Users/FERNANDO/AppData/Local/Programs/Python/Python38-32/%s" %(j))
                if file_stats>=100000:
                    dias_radar.append(j[3:9])                                                
                    sigmet.radar_cpmet(j)      #função que roda o script do radar com nome "sigmet" 
                    plt.savefig( '%s_%s - %s %smm' %(dataFormatada,hora0,estação,chuva_arredondado), dpi=100)
                    print ('Imagem de Radar Salva para o dia %s/%s/%s (%s mm)' %(dia2d,mes2d,ano2d,chuva))
                    n=n+1
                    break        
                
ndias=str(ndias)
n=str(n-1)
print('N° de imagens de satélite/cptec baixadas: %s |' %(ndias), 'N° de imagens de radar baixadas: %s' %(n))
