import plotly
import plotly.graph_objects as go
%matplotlib inline
from matplotlib import pyplot as plt
import pandas as pd
import urllib.request
import sys
from datetime import date, datetime
import requests
from bs4 import BeautifulSoup
import sigmet
import os

limiar=input('Digite o valor mínimo de velocidade do vento (m/s): ')

excel_file = 'Estações_2019.xlsx'
df = pd.read_excel(excel_file)

fig = go.Figure()
fig.add_trace(go.Scatter( x=df['Data'], y=df['RAJADA MAXIMA (RIO GRANDE)'], name='Rio Grande'))
fig.add_trace(go.Scatter( x=df['Data'], y=df['RAJADA MAXIMA (MOSTARDAS)'], name='Mostardas'))
fig.add_trace(go.Scatter( x=df['Data'], y=df['RAJADA MAXIMA (CANGUÇU)'], name='Canguçu'))

fig.update_layout(title='Rajada Máxima de Vento - 2019', xaxis_title='Tempo (horas UTC)', yaxis_title='Velocidade do Vento (m/s)')

fig.show()

plotly.offline.plot(fig, filename="Vento_2019.html")

caguçu=df['RAJADA MAXIMA (CANGUÇU)']
mostardas=df['RAJADA MAXIMA (MOSTARDAS)']
rio_grande=df['RAJADA MAXIMA (RIO GRANDE)']
hora=df['Hora UTC']
d=df['Data'].dt.date
ano=df['Data'].dt.year
mes=df['Data'].dt.month
dia=df['Data'].dt.day
n=0
dias_satelite=['20190101']
dias_radar=['20190101']
ndias=0

for i in range(len(d)):
    if caguçu[i]>=int(limiar) or mostardas[i]>=int(limiar) or rio_grande[i]>=int(limiar):
        if hora[i]<10:
            hora0=str(0)+str(h[i])
        else:
            hora0=str(h[i])
        if mes[i]<10:
            mes0=str(0)+str(mes[i])
        else:
            mes0=str(mes[i])
        if dia[i]<10:
            dia0=str(0)+str(dia[i])
        else:
            dia0=str(dia[i])

        if caguçu[i]>=int(limiar):
            vento=str(caguçu[i])
            estação='Canguçu'
        elif mostardas[i]>=int(limiar):
            vento=str(mostardas[i])
            estação='Mostardas'
        elif rio_grande[i]>=int(limiar):
            vento=str(rio_grande[i])
            estação='Rio Grande'

        dataFormatada = str(d[i].strftime('%Y%m%d'))
        dano=str(ano[i])
        dano2=ano[i]-2000
        ventoar=int(round(float(vento),0))
        ventoar=str(ventoar)

#Download das Imagens de Satélite e do CPTEC
        if dias_satelite[ndias]!=dataFormatada:
            try:
                if int(mes0)>=2:
                    urllib.request.urlretrieve("http://satelite.cptec.inpe.br/repositoriogoes/goes16/goes16_web/ams_ret_ch13_baixa/%s/%s/S11635388_%s1200.jpg" %(dano,mes0,dataFormatada), "%s_12Z - %s_%sms-1.jpg" %(dataFormatada,estação,ventoar))
                    urllib.request.urlretrieve("http://img0.cptec.inpe.br/~rgptimg/Produtos-Pagina/Carta-Sinotica/Analise/Superficie/superficie_%s12.gif" %(dataFormatada), "%s_12Z - %s_%sms-1.gif" %(dataFormatada,estação,ventoar))
                    print("Imagens de satélite e cptec salvas do dia %s 12Z (%s m/s) - %s" %(dataFormatada,vento,estação))
                    dias_satelite.append(dataFormatada)
                    ndias=ndias+1
                    pass
            except:
                erro = sys.exc_info()
                print("Ocorreu um erro em %s %sZ (%s):"  %(dataFormatada,hora0,estação), erro)
            
#-------------------------------------------------------------------------------------------------
#Download das Imagens do Radar
        
        url='http://200.17.160.116:18000/dados/iris_data/product_raw/%s/%s/%s/' %(dano,mes0,dia0)

        links=[]
        website=requests.get(url)
        website_text=website.text
        soup = BeautifulSoup(website_text)

        for link in soup.find_all('a'):
            links.append(link.get('href'))

        for j in links:
            if j[3:9] == '%s%s%s' %(dano2,mes0,dia0) and j[3:9] != dias_radar[n-1]:                    
                web=url+j                    
                #print(web)
                urllib.request.urlretrieve(web,j)
                file_stats = os.path.getsize("C:/Users/FERNANDO/AppData/Local/Programs/Python/Python38-32/%s" %(j))
                if file_stats>=100000:
                    dias_radar.append(j[3:9])
                    sigmet.radar_cpmet(j)
                    plt.savefig( '%s_%s - %s %smm' %(dataFormatada,hora0,estação,chuvar), dpi=100)
                    print ('Imagem de Radar Salva para o dia %s/%s/%s (%s m/s)' %(dia0,mes0,dano2,vento))
                    n=n+1

ndias=str(ndias)
n=str(n)
print('N° de imagens de satélite/cptec baixadas: %s |' %(ndias), 'N° de imagens de radar baixadas: %s' %(n))
